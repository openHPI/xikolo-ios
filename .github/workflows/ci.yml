name: Allround Check
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-test-common:
    name: Build + Test (Common)
    runs-on: macOS-11
    strategy:
      matrix:
        xcode: ['/Applications/Xcode_13.2.app/Contents/Developer']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache RubyGems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Cache CocoaPods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Install dependencies (Bundler)
        run: |
          bundle config path vendor/bundle
          bundle config set without 'documentation'
          bundle install --jobs 4 --retry 3

      - name: Install dependencies (CocoaPods)
        run: bundle exec pod install
        env:
          DEVELOPER_DIR: ${{ matrix.xcode }}

      - name: Copy brand assets
        run: cp -R ./iOS/Branding/openHPI/assets-ios-brand.xcassets ./iOS/assets-ios-brand.generated.xcassets

      - name: Build + Test
        run: bundle exec fastlane run scan scheme:"${scheme}" clean:true
        env:
          scheme: Common
          DEVELOPER_DIR: ${{ matrix.xcode }}
  
  build-test-ios:
    name: Build + Test (iOS)
    runs-on: macOS-11
    strategy:
      matrix:
        xcode: ['/Applications/Xcode_13.2.app/Contents/Developer']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache RubyGems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Cache CocoaPods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Install dependencies (Bundler)
        run: |
          bundle config path vendor/bundle
          bundle config set without 'documentation'
          bundle install --jobs 4 --retry 3

      - name: Install dependencies (CocoaPods)
        run: bundle exec pod install
        env:
          DEVELOPER_DIR: ${{ matrix.xcode }}

      - name: Copy brand assets
        run: cp -R ./iOS/Branding/openHPI/assets-ios-brand.xcassets ./iOS/assets-ios-brand.generated.xcassets
      
      - name: Build + Test
        run: bundle exec fastlane run scan scheme:"${scheme}" clean:true
        env:
          scheme: openHPI-iOS
          DEVELOPER_DIR: ${{ matrix.xcode }}

  lint:
    name: Lint code
    runs-on: macOS-11
    strategy:
      matrix:
        xcode: ['/Applications/Xcode_13.2.app/Contents/Developer']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache RubyGems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Cache CocoaPods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Install dependencies (Bundler)
        run: |
          bundle config path vendor/bundle
          bundle config set without 'documentation'
          bundle install --jobs 4 --retry 3

      - name: Install dependencies (CocoaPods)
        run: bundle exec pod install
        env:
          DEVELOPER_DIR: ${{ matrix.xcode }}

      - name: Check localization
        run: |
          bundle exec fastlane localize
          echo "\nThe following files have incomplete localization:"
          git status --porcelain -- ':!.bundle'
          git diff --quiet -- ':!.bundle'

  check-locales:
    name: Check localization
    runs-on: macOS-11
    strategy:
      matrix:
        xcode: ['/Applications/Xcode_13.2.app/Contents/Developer']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache RubyGems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Cache CocoaPods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Install dependencies (Bundler)
        run: |
          bundle config path vendor/bundle
          bundle config set without 'documentation'
          bundle install --jobs 4 --retry 3

      - name: Install dependencies (CocoaPods)
        run: bundle exec pod install
        env:
          DEVELOPER_DIR: ${{ matrix.xcode }}

      - name: Check localization
        run: |
          bundle exec fastlane localize
          echo "\nThe following files have incomplete localization:"
          git status --porcelain -- ':!.bundle'
          git diff --quiet -- ':!.bundle'
